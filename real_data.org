#+title: QDA by Projection Real Data
#+author: Ruiyang Wu

#+property: header-args :session *R:QDA by Projection* :results output silent :eval no-export

#+name: r initialization
#+begin_src R :exports none
  library(doParallel)
  library(doRNG)
  library(tidyr)
  library(dplyr)
  library(ggplot2)
  source("R/datasplit.R")
  source("R/data_analysis_wrapper.R")
  source("R/data_summary.R")
  source("R/resave.R")
  num_cores <- detectCores()
  registerDoParallel(cores = num_cores)
  if (file.exists("out/real_data_summary.RData"))
    load("out/real_data_summary.RData")
#+end_src

* Breast Cancer
$p=9$, $n=699$. Repeat $m=100$ times for average test error.

#+name: breast cancer setup
#+begin_src R
  seed <- 2020
  m <- 100
  per <- c(0.4, 0.5, 0.6, 0.7, 0.8)
  bc <- read.csv("real_data/breast-cancer-wisconsin.data", header = FALSE)
  y <- bc[, 11]
  id0 <- which(y == 2)
  id1 <- which(y == 4)
  y[id0] <- 0
  y[id1] <- 1
  x <- data.matrix(bc[, 2:10])
#+end_src

#+call: data split()

#+call: models evaluation(name="breast_cancer")

#+call: data summary[:results value replace :colnames yes](name="breast_cancer")

#+RESULTS:
| pct. | DSDA        | LDA         | QDA         | QDAP        | RDA         | SQDA        |
|------+-------------+-------------+-------------+-------------+-------------+-------------|
|  0.4 | 5.09 (0.09) | 4.76 (0.09) | 5.31 (0.09) | 3.49 (0.06) | 4.49 (0.09) | 4.65 (0.11) |
|  0.5 | 4.97 (0.09) | 4.67 (0.08) | 5.01 (0.09) | 3.36 (0.06) | 4.32 (0.08) | 4.43 (0.10) |
|  0.6 | 4.81 (0.12) | 4.61 (0.11) | 5.04 (0.12) | 3.38 (0.09) | 4.29 (0.11) | 4.36 (0.13) |
|  0.7 | 5.09 (0.12) | 4.80 (0.13) | 4.95 (0.14) | 3.36 (0.11) | 4.35 (0.12) | 4.32 (0.13) |
|  0.8 | 4.63 (0.16) | 4.64 (0.17) | 4.86 (0.16) | 3.28 (0.12) | 4.10 (0.16) | 3.99 (0.15) |

* Ultrasonic Flowmeter
$p=36$, $n=87$. Repeat $m=100$ times for average test error.

#+name: flowmeter setup
#+begin_src R
  seed <- 2020
  m <- 100
  per <- c(0.3, 0.4, 0.5, 0.6, 0.7, 0.8)
  fm <- read.table("real_data/Meter A.data")
  y <- fm[, 37]
  id0 <- which(y == 2)
  id1 <- which(y == 1)
  y[id0] <- 0
  y[id1] <- 1
  x <- data.matrix(fm[, 1:36])
#+end_src

#+call: data split()

#+call: models evaluation(qda="FALSE",name="flowmeter")

#+call: data summary[:results value replace :colnames yes](name="flowmeter")

#+RESULTS:
| pct. | DSDA         | LDA          | QDAP         | RDA          | SQDA         |
|------+--------------+--------------+--------------+--------------+--------------|
|  0.3 | 23.98 (1.21) | 25.69 (1.03) | 20.23 (0.82) | 36.61 (0.81) | 19.05 (0.61) |
|  0.4 | 19.77 (1.16) | 12.19 (0.80) | 12.75 (0.77) | 34.29 (0.73) | 17.83 (0.66) |
|  0.5 | 4.37 (0.58)  | 3.28 (0.32)  | 5.72 (0.47)  | 33.70 (0.73) | 14.98 (0.68) |
|  0.6 | 2.77 (0.48)  | 1.23 (0.21)  | 2.69 (0.40)  | 32.71 (0.62) | 15.00 (0.67) |
|  0.7 | 2.33 (0.39)  | 0.96 (0.17)  | 0.96 (0.20)  | 35.19 (0.71) | 12.74 (0.77) |
|  0.8 | 0.94 (0.25)  | 0.76 (0.20)  | 0.71 (0.19)  | 33.82 (0.99) | 12.59 (0.78) |

* Heart Disease
$p=13$, $n=303$. Repeat $m=100,300$ times for average test error.

#+name: heart disease setup
#+begin_src R
  seed <- 2020
  m <- 300
  per <- c(0.4, 0.5, 0.6, 0.7, 0.8)
  hd <- read.csv("real_data/heart.csv")
  y <- hd[, 14]
  id0 <- which(y == 0)
  id1 <- which(y == 1)
  x <- data.matrix(hd[, 1:13])
#+end_src

#+call: data split()

#+call: models evaluation(name="heart_disease")

#+call: data summary[:results value replace :colnames yes](name="heart_disease")

#+RESULTS:
| pct. | DSDA         | LDA          | QDA          | QDAP         | RDA          | SQDA         |
|------+--------------+--------------+--------------+--------------+--------------+--------------|
|  0.4 | 19.28 (0.15) | 18.82 (0.14) | 22.23 (0.15) | 18.66 (0.15) | 19.15 (0.17) | 20.10 (0.20) |
|  0.5 | 18.39 (0.16) | 17.93 (0.15) | 21.67 (0.15) | 17.84 (0.15) | 17.91 (0.17) | 18.86 (0.18) |
|  0.6 | 18.00 (0.17) | 17.81 (0.17) | 20.86 (0.18) | 17.59 (0.17) | 17.56 (0.18) | 18.43 (0.19) |
|  0.7 | 17.33 (0.17) | 17.22 (0.18) | 20.26 (0.21) | 17.04 (0.18) | 16.90 (0.19) | 17.42 (0.18) |
|  0.8 | 17.66 (0.23) | 17.54 (0.24) | 19.98 (0.26) | 17.29 (0.24) | 17.02 (0.24) | 17.46 (0.26) |

* Accent Recognition

#+name: accent recognition setup
#+begin_src R
  seed <- 2020
  m <- 100
  per <- c(0.4, 0.5, 0.6, 0.7, 0.8)
  ar <- read.csv("real_data/accent-mfcc-data-1.csv")
  ar <- ar[c(which(ar[, 1] == "GE"), which(ar[, 1] == "FR")), ]
  y <- ar[, 1]
  id0 <- which(y == "GE")
  id1 <- which(y == "FR")
  y[id0] <- 0
  y[id1] <- 1
  y <- as.numeric(y)
  x <- data.matrix(ar[, 2:13])
#+end_src

#+call: data split()

#+call: models evaluation(qda="FALSE",name="accent_rec")

#+call: data summary[:results value replace :colnames yes](name="accent_rec")

#+RESULTS:
| pct. | DSDA         | LDA          | QDAP         | RDA          | SQDA         |
|------+--------------+--------------+--------------+--------------+--------------|
|  0.4 | 12.92 (0.80) | 14.58 (0.75) | 19.25 (1.11) | 12.58 (0.72) | 15.78 (0.82) |
|  0.5 | 11.00 (0.70) | 11.10 (0.57) | 15.43 (1.14) | 10.03 (0.56) | 13.47 (0.63) |
|  0.6 | 9.33 (0.59)  | 9.83 (0.50)  | 11.21 (0.69) | 9.17 (0.61)  | 12.67 (0.75) |
|  0.7 | 8.61 (0.67)  | 7.83 (0.56)  | 7.94 (0.57)  | 8.56 (0.61)  | 12.06 (0.73) |
|  0.8 | 7.42 (0.78)  | 7.50 (0.86)  | 7.42 (0.86)  | 6.92 (0.64)  | 10.00 (0.83) |

* Parkinson Disease

#+name: parkinson disease setup
#+begin_src R
  seed <- 2020
  m <- 100
  per <- c(0.4, 0.5, 0.6, 0.7, 0.8)
  pd <- read.csv("real_data/ParkinsonDatabase.csv")
  y <- pd[, 3]
  id0 <- which(y == 0)
  id1 <- which(y == 1)
  x <- data.matrix(pd[, 5:48])
  x[, 2] <- x[, 2] * 10000
#+end_src

#+call: data split()

#+call: models evaluation(name="parkinson")

#+call: data summary[:results value replace :colnames yes](name="parkinson")

#+RESULTS:
| pct. | DSDA         | LDA          | QDA          | QDAP         | RDA          | SQDA         |
|------+--------------+--------------+--------------+--------------+--------------+--------------|
|  0.4 | 22.15 (0.66) | 32.50 (1.29) | 39.58 (0.83) | 28.61 (1.04) | 21.18 (1.03) | 23.40 (1.36) |
|  0.5 | 19.67 (1.25) | 27.92 (1.44) | 30.92 (1.18) | 25.42 (1.74) | 18.25 (0.92) | 26.50 (1.15) |
|  0.6 | 20.10 (0.79) | 27.08 (1.39) | 27.40 (2.09) | 25.31 (1.60) | 19.48 (0.60) | 22.71 (0.90) |
|  0.7 | 17.78 (1.07) | 22.50 (1.53) | 26.81 (1.66) | 20.14 (1.36) | 15.69 (1.49) | 21.81 (1.59) |
|  0.8 | 21.88 (2.20) | 23.75 (2.02) | 24.17 (1.36) | 23.33 (1.88) | 20.21 (2.01) | 23.54 (1.39) |

* Heart Failure Clinical Records

#+name: heart failure setup
#+begin_src R
  seed <- 2020
  m <- 100
  per <- c(0.4, 0.5, 0.6, 0.7, 0.8)
  hf <- read.csv("real_data/heart_failure_clinical_records_dataset.csv")
  y <- hf[, 13]
  id0 <- which(y == 0)
  id1 <- which(y == 1)
  x <- data.matrix(hf[, 1:12])
#+end_src

#+call: data split()

#+call: models evaluation(name="heart_failure")

#+call: data summary[:results value replace :colnames yes](name="heart_failure")

#+RESULTS:
| pct. | DSDA         | LDA          | QDA          | QDAP         | RDA          | SQDA         |
|------+--------------+--------------+--------------+--------------+--------------+--------------|
|  0.4 | 21.71 (0.58) | 19.34 (0.22) | 26.71 (0.26) | 19.73 (0.30) | 19.12 (0.27) | 18.39 (0.31) |
|  0.5 | 22.06 (0.64) | 19.00 (0.29) | 25.26 (0.29) | 19.30 (0.32) | 18.57 (0.29) | 18.56 (0.33) |
|  0.6 | 20.55 (0.56) | 18.39 (0.27) | 24.61 (0.28) | 19.63 (0.34) | 18.03 (0.28) | 18.03 (0.32) |
|  0.7 | 18.71 (0.56) | 17.50 (0.37) | 25.11 (0.37) | 18.23 (0.39) | 16.92 (0.39) | 17.88 (0.44) |
|  0.8 | 19.18 (0.60) | 17.65 (0.43) | 25.00 (0.47) | 18.33 (0.44) | 17.72 (0.47) | 17.88 (0.45) |

* Breast Cancer Coimbra

#+name: breast cancer coimbre setup
#+begin_src R
  seed <- 2020
  m <- 100
  per <- c(0.4, 0.5, 0.6, 0.7, 0.8)
  bcc <- read.csv("real_data/Breast Cancer Coimbra.csv")
  y <- bcc[, 10]
  id0 <- which(y == 2)
  id1 <- which(y == 1)
  y[id0] <- 0
  y[id1] <- 1
  x <- data.matrix(bcc[, 1:9])
#+end_src

#+call: data split()

#+call: models evaluation(name="breast_cancer_coimbra")

#+call: data summary[:results value replace :colnames yes](name="breast_cancer_coimbra")

#+RESULTS:
| pct. | DSDA         | LDA          | QDA          | QDAP         | RDA          | SQDA         |
|------+--------------+--------------+--------------+--------------+--------------+--------------|
|  0.4 | 31.99 (0.53) | 31.29 (0.52) | 32.83 (0.47) | 35.71 (0.73) | 31.75 (0.57) | 36.09 (0.55) |
|  0.5 | 32.14 (0.59) | 29.67 (0.54) | 31.34 (0.59) | 36.76 (0.79) | 31.33 (0.71) | 34.52 (0.65) |
|  0.6 | 32.94 (0.69) | 30.19 (0.66) | 33.89 (0.60) | 38.79 (0.74) | 30.26 (0.62) | 35.53 (0.64) |
|  0.7 | 31.20 (0.79) | 29.49 (0.66) | 32.29 (0.65) | 36.03 (0.97) | 29.37 (0.66) | 33.71 (0.70) |
|  0.8 | 30.57 (1.06) | 29.43 (0.99) | 37.48 (0.83) | 42.13 (0.90) | 30.04 (0.93) | 36.57 (0.89) |

* Various Code Blocks
:PROPERTIES:
:APPENDIX: t
:END:
** Data Split Code
#+name: data split
#+begin_src R
  set.seed(seed)
  id <- datasplit(id0 = id0, id1 = id1,
                     m = m, per = per)
#+end_src
** Models Evaluation Code
#+name: models evaluation
#+begin_src R :var lda="TRUE" qda="TRUE" dsda="TRUE" sqda="TRUE" rda="TRUE"
  len_per <- length(per)
  pred_err <- vector("list", len_per)
  for (i in 1:len_per) {
    pred_err[[i]] <- foreach(j = 1:m, .combine = rbind,
                             .options.RNG = seed) %dorng%
      data_analysis(x = x[id[[i]][[j]], ], y = y[id[[i]][[j]]],
                    xnew = x[-id[[i]][[j]], ], ynew = y[-id[[i]][[j]]],
                    lda = lda, qda = qda, dsda = dsda, sqda = sqda, rda = rda)
  }
  obj_name <- paste0("pred_err_", name)
  assign(obj_name, pred_err)
  resave(list = obj_name, file = "out/real_data_summary.RData")
#+end_src
** Data Summary Code
#+name: data summary
#+begin_src R
  obj_name <- paste0("pred_err_", name)
  out <- paste0("out/", name, ".pdf")
  len_per <- length(per)
  data_summarized <- NULL
  for (i in 1:len_per) {
    data_summarized <-
      rbind(data_summarized,
            data.frame(summary_se(get(obj_name)[[i]]), pct. = per[i]))
  }
  pdf(out)
  pd <- position_dodge(0.01)
  plot <- ggplot(data_summarized, aes(x = pct., y = prediction.error,
                                      colour = method)) +
    geom_errorbar(aes(ymin = prediction.error - ci.95,
                      ymax = prediction.error + ci.95),
                  width = .02, position = pd) +
    geom_line(position = pd) +
    geom_point(position = pd)
  print(plot)
  dev.off()
  data_summarized %>%
    dplyr::select(- ci.95) %>%
    mutate(prediction.error
           = format(round(prediction.error * 100, 2), nsmall = 2)) %>%
    mutate(standard.error = paste0("(", format(round(standard.error * 100, 2),
                                               nsmall = 2), ")")) %>%
    unite(col = prediction.error, prediction.error, standard.error, sep = " ") %>%
    spread(key = method, value = prediction.error)
#+end_src

* COMMENT Local Variables

# Local Variables:
# org-confirm-babel-evaluate: nil
# End:
