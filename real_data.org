#+title: QDA by Projection Real Data
#+author: Ruiyang Wu

#+property: header-args :session *R:QDA by Projection* :results output silent :eval no-export

#+name: r initialization
#+begin_src R :exports none
  library(doParallel)
  library(doRNG)
  library(tidyr)
  library(dplyr)
  library(ggplot2)
  source("R/datasplit.R")
  source("R/data_analysis_wrapper.R")
  source("R/data_summary.R")
  source("R/resave.R")
  num_cores <- detectCores()
  registerDoParallel(cores = num_cores)
  if (file.exists("out/real_data_summary.RData"))
    load("out/real_data_summary.RData")
#+end_src

* Breast Cancer
$p=9$, $n=699$. Repeat $m=100$ times for average test error.

#+name: breast cancer setup
#+begin_src R
  seed <- 2020
  m <- 100
  per <- c(0.4, 0.5, 0.6, 0.7, 0.8)
  bc <- read.csv("real_data/breast-cancer-wisconsin.data", header = FALSE)
  y <- bc[, 11]
  id0 <- which(y == 2)
  id1 <- which(y == 4)
  y[id0] <- 0
  y[id1] <- 1
  x <- data.matrix(bc[, 2:10])
#+end_src

#+call: data split()

#+call: models evaluation(name="breast_cancer")

#+call: data summary[:results value replace :colnames yes](name="breast_cancer")

#+RESULTS:
| pct. | DSDA        | LDA         | QDA         | QDAP        | RDA         | SQDA        |
|------+-------------+-------------+-------------+-------------+-------------+-------------|
|  0.4 | 5.09 (0.09) | 4.76 (0.09) | 5.31 (0.09) | 3.49 (0.06) | 4.49 (0.09) | 4.65 (0.11) |
|  0.5 | 4.97 (0.09) | 4.67 (0.08) | 5.01 (0.09) | 3.36 (0.06) | 4.32 (0.08) | 4.43 (0.10) |
|  0.6 | 4.81 (0.12) | 4.61 (0.11) | 5.04 (0.12) | 3.38 (0.09) | 4.29 (0.11) | 4.36 (0.13) |
|  0.7 | 5.09 (0.12) | 4.80 (0.13) | 4.95 (0.14) | 3.36 (0.11) | 4.35 (0.12) | 4.32 (0.13) |
|  0.8 | 4.63 (0.16) | 4.64 (0.17) | 4.86 (0.16) | 3.28 (0.12) | 4.10 (0.16) | 3.99 (0.15) |

* Ultrasonic Flowmeter
$p=36$, $n=87$. Repeat $m=100$ times for average test error.

#+name: flowmeter setup
#+begin_src R
  seed <- 2020
  m <- 100
  per <- c(0.3, 0.4, 0.5, 0.6, 0.7, 0.8)
  fm <- read.table("real_data/Meter A.data")
  y <- fm[, 37]
  id0 <- which(y == 2)
  id1 <- which(y == 1)
  y[id0] <- 0
  y[id1] <- 1
  x <- data.matrix(fm[, 1:36])
#+end_src

#+call: data split()

#+call: models evaluation(qda="FALSE",name="flowmeter")

#+call: data summary[:results value replace :colnames yes](name="flowmeter")

#+RESULTS:
| pct. | DSDA         | LDA          | QDAP         | RDA          | SQDA         |
|------+--------------+--------------+--------------+--------------+--------------|
|  0.3 | 23.98 (1.21) | 25.69 (1.03) | 20.23 (0.82) | 36.61 (0.81) | 19.05 (0.61) |
|  0.4 | 19.77 (1.16) | 12.19 (0.80) | 12.75 (0.77) | 34.29 (0.73) | 17.83 (0.66) |
|  0.5 | 4.37 (0.58)  | 3.28 (0.32)  | 5.72 (0.47)  | 33.70 (0.73) | 14.98 (0.68) |
|  0.6 | 2.77 (0.48)  | 1.23 (0.21)  | 2.69 (0.40)  | 32.71 (0.62) | 15.00 (0.67) |
|  0.7 | 2.33 (0.39)  | 0.96 (0.17)  | 0.96 (0.20)  | 35.19 (0.71) | 12.74 (0.77) |
|  0.8 | 0.94 (0.25)  | 0.76 (0.20)  | 0.71 (0.19)  | 33.82 (0.99) | 12.59 (0.78) |

* Heart Disease
$p=13$, $n=303$. Repeat $m=100,300$ times for average test error.

#+name: heart disease setup
#+begin_src R
  seed <- 2020
  m <- 300
  per <- c(0.4, 0.5, 0.6, 0.7, 0.8)
  hd <- read.csv("real_data/heart.csv")
  y <- hd[, 14]
  id0 <- which(y == 0)
  id1 <- which(y == 1)
  x <- data.matrix(hd[, 1:13])
#+end_src

#+call: data split()

#+call: models evaluation(name="heart_disease")

#+call: data summary[:results value replace :colnames yes](name="heart_disease")

#+RESULTS:
| pct. | DSDA         | LDA          | QDA          | QDAP         | RDA          | SQDA         |
|------+--------------+--------------+--------------+--------------+--------------+--------------|
|  0.4 | 19.28 (0.15) | 18.82 (0.14) | 22.23 (0.15) | 18.66 (0.15) | 19.15 (0.17) | 20.10 (0.20) |
|  0.5 | 18.39 (0.16) | 17.93 (0.15) | 21.67 (0.15) | 17.84 (0.15) | 17.91 (0.17) | 18.86 (0.18) |
|  0.6 | 18.00 (0.17) | 17.81 (0.17) | 20.86 (0.18) | 17.59 (0.17) | 17.56 (0.18) | 18.43 (0.19) |
|  0.7 | 17.33 (0.17) | 17.22 (0.18) | 20.26 (0.21) | 17.04 (0.18) | 16.90 (0.19) | 17.42 (0.18) |
|  0.8 | 17.66 (0.23) | 17.54 (0.24) | 19.98 (0.26) | 17.29 (0.24) | 17.02 (0.24) | 17.46 (0.26) |

* Various Code Blocks
:PROPERTIES:
:APPENDIX: t
:END:
** Data Split Code
#+name: data split
#+begin_src R
  set.seed(seed)
  id <- datasplit(id0 = id0, id1 = id1,
                     m = m, per = per)
#+end_src
** Models Evaluation Code
#+name: models evaluation
#+begin_src R :var lda="TRUE" qda="TRUE" dsda="TRUE" sqda="TRUE" rda="TRUE"
  len_per <- length(per)
  pred_err <- vector("list", len_per)
  for (i in 1:len_per) {
    pred_err[[i]] <- foreach(j = 1:m, .combine = rbind,
                             .options.RNG = seed) %dorng%
      data_analysis(x = x[id[[i]][[j]], ], y = y[id[[i]][[j]]],
                    xnew = x[-id[[i]][[j]], ], ynew = y[-id[[i]][[j]]],
                    lda = lda, qda = qda, dsda = dsda, sqda = sqda, rda = rda)
  }
  obj_name <- paste0("pred_err_", name)
  assign(obj_name, pred_err)
  resave(list = obj_name, file = "out/real_data_summary.RData")
#+end_src
** Data Summary Code
#+name: data summary
#+begin_src R
  obj_name <- paste0("pred_err_", name)
  out <- paste0("out/", name, ".pdf")
  len_per <- length(per)
  data_summarized <- NULL
  for (i in 1:len_per) {
    data_summarized <-
      rbind(data_summarized,
            data.frame(summary_se(get(obj_name)[[i]]), pct. = per[i]))
  }
  pdf(out)
  pd <- position_dodge(0.01)
  plot <- ggplot(data_summarized, aes(x = pct., y = prediction.error,
                                      colour = method)) +
    geom_errorbar(aes(ymin = prediction.error - ci.95,
                      ymax = prediction.error + ci.95),
                  width = .02, position = pd) +
    geom_line(position = pd) +
    geom_point(position = pd)
  print(plot)
  dev.off()
  data_summarized %>%
    dplyr::select(- ci.95) %>%
    mutate(prediction.error
           = format(round(prediction.error * 100, 2), nsmall = 2)) %>%
    mutate(standard.error = paste0("(", format(round(standard.error * 100, 2),
                                               nsmall = 2), ")")) %>%
    unite(col = prediction.error, prediction.error, standard.error, sep = " ") %>%
    spread(key = method, value = prediction.error)
#+end_src

* COMMENT Local Variables

# Local Variables:
# org-confirm-babel-evaluate: nil
# End:
